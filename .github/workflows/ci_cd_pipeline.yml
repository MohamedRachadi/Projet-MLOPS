name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: pytest tests/

  build_and_deploy:
    name: Build and Deploy API
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Build Docker Image
        run: |
          docker build -t my-api:latest .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: |
          docker tag my-api:latest ${{ secrets.DOCKER_USERNAME }}/my-api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-api:latest

  test_serving:
    name: Test MLflow Model Serving
    runs-on: ubuntu-latest
    needs: build_and_deploy
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow requests

      - name: Test MLflow Model Serving
        env:
          MLFLOW_TRACKING_URI: "http://127.0.0.1:5000"
        run: |
          # Example script to test MLflow serving
          python -c "
          import mlflow
          client = mlflow.tracking.MlflowClient()
          models = client.list_registered_models()
          print('Available models:', [model.name for model in models])