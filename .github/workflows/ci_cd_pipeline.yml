name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Tu peux spécifier la branche sur laquelle tu veux que le pipeline soit exécuté
  pull_request:
    branches:
      - main

jobs:
  # Job pour les tests
  tests:
    runs-on: ubuntu-latest  # Ou windows-latest selon ton environnement
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start API
        run: |
          python -m uvicorn src.api:app --host 0.0.0.0 --port 8000 &
          sleep 15  # Temps pour que l'API démarre

      - name: Run tests
        run: |
          pytest tests/  

  # Job pour déployer l'API
  deploy:
    runs-on: ubuntu-latest
    needs: tests  # Cette étape sera lancée seulement si les tests passent
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set environment variable for Docker
        run: echo "DOCKER=true" >> $GITHUB_ENV  # Ajout de la variable DOCKER=true

      - name: Set up Docker
        run: |
          docker build -t mlops-api .
          docker run -d --name mlops-api-container -p 8000:8000 mlops-api  

      # Attendre quelques secondes pour que l'API soit prête
      - name: Wait for API to be ready
        run: |
          sleep 30  

      - name: Check Docker logs
        run: |
          docker logs mlops-api-container

      - name: Test API endpoint
        run: |
          curl -X POST http://localhost:8000/predict \
          -H "Content-Type: application/json" \
          -d '{"MedInc": 3.2, "HouseAge": 30, "AveRooms": 6.5, "AveBedrms": 2.0, "Population": 1000, "AveOccup": 3.0, "Latitude": 34.5, "Longitude": -118.5}'

      - name: Test if API is running
        run: |
          curl http://localhost:8000  
