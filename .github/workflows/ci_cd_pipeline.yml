name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m venv venv
        . venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Prepare mlruns directory
      run: mkdir -p $(pwd)/mlruns

    - name: Start MLflow server
      run: |
        docker run -d --name mlflow_server -p 5001:5000 \
          -v $(pwd)/mlruns:/mlruns \
          -e MLFLOW_TRACKING_URI=http://0.0.0.0:5000 \
          ghcr.io/mlflow/mlflow:v2.5.0
          sleep 10

    - name: Start API in Docker container
      run: |
        docker build -t my_api_image -f Dockerfile .
        docker run -d --name api_container -p 5000:5000 \
          -v $(pwd)/mlruns:/mlruns my_api_image
        sleep 15

    - name: Check API health
      run: |
        for i in {1..10}; do
          if curl -s http://localhost:5000/health; then
            echo "API is ready!"
            exit 0
          fi
          echo "Waiting for API..."
          sleep 5
        done
        echo "API did not respond in time."
        exit 1

    - name: Run tests
      run: |
        . venv/bin/activate
        pytest tests --junitxml=results.xml

    - name: Check API logs
      if: failure()
      run: docker logs api_container

    - name: Stop and clean Docker containers
      if: always()
      run: |
        docker stop api_container mlflow_server || true
        docker rm api_container mlflow_server || true