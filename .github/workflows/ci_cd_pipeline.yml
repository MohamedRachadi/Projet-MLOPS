name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start API
        run: |
          uvicorn src.api:app --reload > uvicorn.log 2>&1 &
          sleep 20  # Temps pour que l'API dÃ©marre

      - name: Check API logs
        run: |
          echo "Displaying last 100 lines of API logs:"
          tail -n 100 uvicorn.log || true

      - name: Debug API startup
        run: |
          echo "Checking if uvicorn is running:"
          ps aux | grep uvicorn

      - name: Check open ports
        run: |
          echo "Checking open ports:"
          netstat -tuln

      - name: Check if uvicorn is running
        run: |
          ps aux | grep uvicorn

      - name: Wait for API to be ready
        run: |
          timeout=120
          while ! curl -s http://localhost:8000 > /dev/null; do
            sleep 1
            timeout=$((timeout - 1))
            if [ $timeout -le 0 ]; then
              echo "API did not start in time."
              exit 1
            fi
          done
      
      - name: Wait for MLflow to be ready
        run: |
          timeout=60
          while ! curl -s http://127.0.0.1:5000 > /dev/null; do
            sleep 1
            timeout=$((timeout - 1))
            if [ $timeout -le 0 ]; then
              echo "MLflow did not start in time."
              exit 1
            fi
          done

      - name: Run tests
        run: |
          pytest tests/

  deploy:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set environment variable for Docker
        run: echo "DOCKER=true" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t mlops-api .

      - name: Run Docker container
        run: |
          docker run -d --name mlops-api-container -p 8000:8000 mlops-api

      - name: Wait for API to be ready in Docker
        run: |
          timeout=30
          while ! curl -s http://localhost:8000 > /dev/null; do
            sleep 1
            timeout=$((timeout - 1))
            if [ $timeout -le 0 ]; then
              echo "API did not start in time."
              exit 1
            fi
          done

      - name: Test API endpoint
        run: |
          curl -X POST http://localhost:8000/predict \
          -H "Content-Type: application/json" \
          -d '{"MedInc": 3.2, "HouseAge": 30, "AveRooms": 6.5, "AveBedrms": 2.0, "Population": 1000, "AveOccup": 3.0, "Latitude": 34.5, "Longitude": -118.5}'

      - name: Run tests in Docker
        run: |
          docker exec mlops-api-container pytest tests/
