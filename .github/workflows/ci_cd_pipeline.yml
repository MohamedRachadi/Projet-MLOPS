name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      mlflow:
        image: "mlflow/mlflow:2.4.1"  # Utilisation de l'image officielle de MLflow
        options: --publish 5000:5000   # Publier le port 5000 pour accéder à l'API MLflow
        # Démarrer le container MLflow

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set PYTHONPATH for testing
        run: |
          export PYTHONPATH=$(pwd)/src:$PYTHONPATH

      - name: Wait for MLflow to be ready
        run: |
          # Attendre quelques secondes pour que MLflow démarre
          sleep 30

      - name: Run tests
        run: |
          pytest tests/  # Lancer les tests après l'attente

  deploy:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          docker build -t mlops-api .  # Créer l'image Docker pour l'API

      - name: Run Docker container
        run: |
          docker run -d --name mlops-api-container -p 8000:8000 mlops-api  # Lancer l'API dans un container Docker

      - name: Wait for API to start
        run: |
          sleep 10  # Attendre quelques secondes pour le démarrage de l'API

      - name: Test API endpoint
        run: |
          curl --fail http://localhost:8000/predict || exit 1  # Vérifier que l'API fonctionne
